{"meta":{"exported_on":1502258555230,"version":"1.5.1"},"data":{"migrations":[{"id":1,"name":"1-create-tables.js","version":"init","currentVersion":"1.2"},{"id":2,"name":"2-create-fixtures.js","version":"init","currentVersion":"1.2"},{"id":3,"name":"1-post-excerpt.js","version":"1.3","currentVersion":"1.4"},{"id":4,"name":"1-codeinjection-post.js","version":"1.4","currentVersion":"1.4"}],"posts":[{"id":"5980610f8b6b9f5294dd27be","uuid":"3e94c4e5-ddd9-49b5-894d-4108808c178e","title":"手机号加密","slug":"bo-ke","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"### 说明\\n手机号是数字组成，故可以把字符串看成long类型\\n加密原理：位的异或运算\\n\\n例如 A^B=C;那么 C^B=A\\n\\n为了精简传输，故可以把10进制转换成64进制传输，另外改动一下对应的映射即可简单加密\\n\\n\\n### 定义\\n10进制转换成64进制 对应的索引字符如下 一共64个字符\\n\\n```\\n'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\\n'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\\n'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\\n'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\\n'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'\\n```\\n例如13位的手机号`18611522617`就变成了`5jHIIE` 缩短很多\\n### java 实现\\n```java\\n    private static final char[] BASE_MASK_CHARS = {\\n            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\\n            'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\\n            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\\n            'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\\n            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'\\n    };\\n    private static final int BASE_MASK_LENGTH = BASE_MASK_CHARS.length;\\n    private static final int BASE_MASK_BIT_LENGTH = 6;\\n\\n    private static final Map<Integer, Integer> BASE_MASK_INDEX;\\n\\n    static {\\n        BASE_MASK_INDEX = new HashMap<>(BASE_MASK_LENGTH);\\n        for (int i = 0; i < BASE_MASK_LENGTH; i++) {\\n            BASE_MASK_INDEX.put((int) BASE_MASK_CHARS[i], i);\\n        }\\n    }\\n\\n\\n    /**\\n     * 把手机号当成10进制转换成64进制\\n     *\\n     * @param mobile\\n     * @return\\n     */\\n    public static String getEndMobile(String mobile) {\\n        long number = Long.valueOf(mobile);\\n        StringBuilder buf = new StringBuilder();\\n        while (number > 0) {\\n            int index = (int) (number % BASE_MASK_LENGTH);\\n            buf.append(BASE_MASK_CHARS[index]);\\n            number = number >> BASE_MASK_BIT_LENGTH;\\n\\n        }\\n        return buf.toString();\\n\\n    }\\n\\n    /**\\n     * 解密64位的手机号变成10进制\\n     *\\n     * @param s\\n     * @return\\n     */\\n    public static long getDecMobile(String s) {\\n        long result = 0L;\\n        char[] mobiles = s.toCharArray();\\n        for (int pos = mobiles.length - 1; pos >= 0; pos--) {\\n            int v = (int) mobiles[pos];\\n            int index = BASE_MASK_INDEX.get(v);\\n            result = (result << BASE_MASK_BIT_LENGTH) + index;\\n        }\\n        return result;\\n    }\\n\\n\\n    /**\\n     * 使用两次异或还原的特效进行简单的加密\\n     *\\n     * @return\\n     */\\n    public static byte[] mask(byte[] mobile, byte[] mask) {\\n        int maskLength = mask.length;\\n        for (int index = 0; index < mobile.length; index++) {\\n            byte c = mobile[index];\\n            //mask可能和mobile长度不一致，故对mask索引运行 mod  ，进而对mask重复使用\\n            mobile[index] = (byte) (c ^ mask[index % maskLength]);\\n        }\\n        return mobile;\\n    }\\n\\n\\n    public static void main(String args[]) {\\n\\n\\n        String endMobile = getEndMobile(\\\"18612345678\\\");\\n        System.out.println(\\\"手机号10进制转换成16进制如下：\\\\t\\\" + endMobile);\\n\\n        byte[] mobile = endMobile.getBytes();\\n        byte[] mask = \\\"12355678\\\".getBytes();\\n        String encodeMobileInfo;\\n\\n        {   //这部分是服务端处理\\n            //进行一次加密\\n            mobile = mask(mobile, mask);\\n            //进行一次Base64 urlEncoder 并使用withoutPadding 把多于的填充去掉\\n            encodeMobileInfo = Base64.getUrlEncoder().withoutPadding().encodeToString(mobile);\\n            System.out.println(\\\"加密16进制手机号数据:\\\\t\\\" + encodeMobileInfo);\\n        }\\n\\n        {   //客户端处理\\n            //客户端获取数据  先base64解密，然后再进行一次异或操作即可\\n            mobile = mask(Base64.getUrlDecoder().decode(encodeMobileInfo), mask);\\n            System.out.println(\\\"解密获取手机号:\\\\t\\\" + getDecMobile(new String(mobile)));\\n        }\\n        System.exit(0);\\n    }\\n\\n\\n```\\n输出结果\\n```\\n手机号10进制转换成16进制如下：\\tOtdYVR\\n加密16进制手机号数据:\\tfkZXbGNk\\n解密获取手机号:\\t18612345678\\n```\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><h3 id=\"\">说明</h3>\n<p>手机号是数字组成，故可以把字符串看成long类型<br>\n加密原理：位的异或运算</p>\n<p>例如 A^B=C;那么 C^B=A</p>\n<p>为了精简传输，故可以把10进制转换成64进制传输，另外改动一下对应的映射即可简单加密</p>\n<h3 id=\"\">定义</h3>\n<p>10进制转换成64进制 对应的索引字符如下 一共64个字符</p>\n<pre><code>'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'\n</code></pre>\n<p>例如13位的手机号<code>18611522617</code>就变成了<code>5jHIIE</code> 缩短很多</p>\n<h3 id=\"java\">java 实现</h3>\n<pre><code class=\"language-java\">    private static final char[] BASE_MASK_CHARS = {\n            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n            'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n            'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'\n    };\n    private static final int BASE_MASK_LENGTH = BASE_MASK_CHARS.length;\n    private static final int BASE_MASK_BIT_LENGTH = 6;\n\n    private static final Map&lt;Integer, Integer&gt; BASE_MASK_INDEX;\n\n    static {\n        BASE_MASK_INDEX = new HashMap&lt;&gt;(BASE_MASK_LENGTH);\n        for (int i = 0; i &lt; BASE_MASK_LENGTH; i++) {\n            BASE_MASK_INDEX.put((int) BASE_MASK_CHARS[i], i);\n        }\n    }\n\n\n    /**\n     * 把手机号当成10进制转换成64进制\n     *\n     * @param mobile\n     * @return\n     */\n    public static String getEndMobile(String mobile) {\n        long number = Long.valueOf(mobile);\n        StringBuilder buf = new StringBuilder();\n        while (number &gt; 0) {\n            int index = (int) (number % BASE_MASK_LENGTH);\n            buf.append(BASE_MASK_CHARS[index]);\n            number = number &gt;&gt; BASE_MASK_BIT_LENGTH;\n\n        }\n        return buf.toString();\n\n    }\n\n    /**\n     * 解密64位的手机号变成10进制\n     *\n     * @param s\n     * @return\n     */\n    public static long getDecMobile(String s) {\n        long result = 0L;\n        char[] mobiles = s.toCharArray();\n        for (int pos = mobiles.length - 1; pos &gt;= 0; pos--) {\n            int v = (int) mobiles[pos];\n            int index = BASE_MASK_INDEX.get(v);\n            result = (result &lt;&lt; BASE_MASK_BIT_LENGTH) + index;\n        }\n        return result;\n    }\n\n\n    /**\n     * 使用两次异或还原的特效进行简单的加密\n     *\n     * @return\n     */\n    public static byte[] mask(byte[] mobile, byte[] mask) {\n        int maskLength = mask.length;\n        for (int index = 0; index &lt; mobile.length; index++) {\n            byte c = mobile[index];\n            //mask可能和mobile长度不一致，故对mask索引运行 mod  ，进而对mask重复使用\n            mobile[index] = (byte) (c ^ mask[index % maskLength]);\n        }\n        return mobile;\n    }\n\n\n    public static void main(String args[]) {\n\n\n        String endMobile = getEndMobile(&quot;18612345678&quot;);\n        System.out.println(&quot;手机号10进制转换成16进制如下：\\t&quot; + endMobile);\n\n        byte[] mobile = endMobile.getBytes();\n        byte[] mask = &quot;12355678&quot;.getBytes();\n        String encodeMobileInfo;\n\n        {   //这部分是服务端处理\n            //进行一次加密\n            mobile = mask(mobile, mask);\n            //进行一次Base64 urlEncoder 并使用withoutPadding 把多于的填充去掉\n            encodeMobileInfo = Base64.getUrlEncoder().withoutPadding().encodeToString(mobile);\n            System.out.println(&quot;加密16进制手机号数据:\\t&quot; + encodeMobileInfo);\n        }\n\n        {   //客户端处理\n            //客户端获取数据  先base64解密，然后再进行一次异或操作即可\n            mobile = mask(Base64.getUrlDecoder().decode(encodeMobileInfo), mask);\n            System.out.println(&quot;解密获取手机号:\\t&quot; + getDecMobile(new String(mobile)));\n        }\n        System.exit(0);\n    }\n\n\n</code></pre>\n<p>输出结果</p>\n<pre><code>手机号10进制转换成16进制如下：\tOtdYVR\n加密16进制手机号数据:\tfkZXbGNk\n解密获取手机号:\t18612345678\n</code></pre>\n</div>","amp":null,"plaintext":"说明\n手机号是数字组成，故可以把字符串看成long类型\n加密原理：位的异或运算\n\n例如 A^B=C;那么 C^B=A\n\n为了精简传输，故可以把10进制转换成64进制传输，另外改动一下对应的映射即可简单加密\n\n定义\n10进制转换成64进制 对应的索引字符如下 一共64个字符\n\n'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'\n\n\n例如13位的手机号18611522617就变成了5jHIIE  缩短很多\n\njava 实现\n    private static final char[] BASE_MASK_CHARS = {\n            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n            'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\n            'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '_'\n    };\n    private static final int BASE_MASK_LENGTH = BASE_MASK_CHARS.length;\n    private static final int BASE_MASK_BIT_LENGTH = 6;\n\n    private static final Map<Integer, Integer> BASE_MASK_INDEX;\n\n    static {\n        BASE_MASK_INDEX = new HashMap<>(BASE_MASK_LENGTH);\n        for (int i = 0; i < BASE_MASK_LENGTH; i++) {\n            BASE_MASK_INDEX.put((int) BASE_MASK_CHARS[i], i);\n        }\n    }\n\n\n    /**\n     * 把手机号当成10进制转换成64进制\n     *\n     * @param mobile\n     * @return\n     */\n    public static String getEndMobile(String mobile) {\n        long number = Long.valueOf(mobile);\n        StringBuilder buf = new StringBuilder();\n        while (number > 0) {\n            int index = (int) (number % BASE_MASK_LENGTH);\n            buf.append(BASE_MASK_CHARS[index]);\n            number = number >> BASE_MASK_BIT_LENGTH;\n\n        }\n        return buf.toString();\n\n    }\n\n    /**\n     * 解密64位的手机号变成10进制\n     *\n     * @param s\n     * @return\n     */\n    public static long getDecMobile(String s) {\n        long result = 0L;\n        char[] mobiles = s.toCharArray();\n        for (int pos = mobiles.length - 1; pos >= 0; pos--) {\n            int v = (int) mobiles[pos];\n            int index = BASE_MASK_INDEX.get(v);\n            result = (result << BASE_MASK_BIT_LENGTH) + index;\n        }\n        return result;\n    }\n\n\n    /**\n     * 使用两次异或还原的特效进行简单的加密\n     *\n     * @return\n     */\n    public static byte[] mask(byte[] mobile, byte[] mask) {\n        int maskLength = mask.length;\n        for (int index = 0; index < mobile.length; index++) {\n            byte c = mobile[index];\n            //mask可能和mobile长度不一致，故对mask索引运行 mod  ，进而对mask重复使用\n            mobile[index] = (byte) (c ^ mask[index % maskLength]);\n        }\n        return mobile;\n    }\n\n\n    public static void main(String args[]) {\n\n\n        String endMobile = getEndMobile(\"18612345678\");\n        System.out.println(\"手机号10进制转换成16进制如下：\\t\" + endMobile);\n\n        byte[] mobile = endMobile.getBytes();\n        byte[] mask = \"12355678\".getBytes();\n        String encodeMobileInfo;\n\n        {   //这部分是服务端处理\n            //进行一次加密\n            mobile = mask(mobile, mask);\n            //进行一次Base64 urlEncoder 并使用withoutPadding 把多于的填充去掉\n            encodeMobileInfo = Base64.getUrlEncoder().withoutPadding().encodeToString(mobile);\n            System.out.println(\"加密16进制手机号数据:\\t\" + encodeMobileInfo);\n        }\n\n        {   //客户端处理\n            //客户端获取数据  先base64解密，然后再进行一次异或操作即可\n            mobile = mask(Base64.getUrlDecoder().decode(encodeMobileInfo), mask);\n            System.out.println(\"解密获取手机号:\\t\" + getDecMobile(new String(mobile)));\n        }\n        System.exit(0);\n    }\n\n\n\n\n输出结果\n\n手机号10进制转换成16进制如下：\tOtdYVR\n加密16进制手机号数据:\tfkZXbGNk\n解密获取手机号:\t18612345678","feature_image":"/content/images/2017/08/77714153da4847db8330bea19d7d1fdb.png","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-01 11:07:59","created_by":"1","updated_at":"2017-08-01 11:33:41","updated_by":"1","published_at":"2017-08-01 11:08:21","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null},{"id":"59806b3a43d7fc53ddfd277a","uuid":"9e84a56f-cd2b-4955-8d36-7eaf769e263b","title":"mysql 相关","slug":"mysql-gu-zhang-xiu-fu","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"## 1. 主从同步出错处理\\n### 背景\\n写入 table 的时候，因为程序bug，写入从库里面去了，下面解决的方法只适用于了：从库里面主动插入了一条新数据\\n\\n###解决步骤\\n1，查看错误log\\n```\\nshow slave status;\\n```\\n找出出错的position，定位table\\n2，定位多插入的那一条数据，备份后并删除它\\n3，如果id是自增的话，需要把id还原\\n```\\nuse db;//切换对应的数据库\\nshow table status where name ='table'\\\\G;//查看当前的信息\\n\\nmysql> show table status where name ='table'\\\\G;\\n*************************** 1. row ***************************\\n           Name: table\\n         Engine: InnoDB\\n        Version: 10\\n     Row_format: Compressed\\n           Rows: 52898364\\n Avg_row_length: 55\\n    Data_length: 2953576448\\nMax_data_length: 0\\n   Index_length: 0\\n      Data_free: 3932160\\n Auto_increment: 47447481\\n    Create_time: 2016-07-22 11:38:00\\n    Update_time: NULL\\n     Check_time: NULL\\n      Collation: utf8mb4_general_ci\\n       Checksum: NULL\\n Create_options: row_format=COMPRESSED KEY_BLOCK_SIZE=4\\n        Comment: \\n1 row in set (0.00 sec)\\n```\\n可以查询当前的`Auto_increment`值\\n\\n4，修改当前的`Auto_increment`值\\n```\\nalter table chat_msg AUTO_INCREMENT=xxxxx;\\n```\\n5，打开从库备份\\n```\\nstart slave ;\\n```\\n开启后检查是否running\\n```\\nshow  slave status\\\\G;\\n```\\n\\n## 2,检查mysql状态几个命令\\n\\n    \\n```mysql\\nshow slave status\\\\G;\\nshow slave hosts\\\\G;\\nshow processlist\\\\G;\\n```\\n\\n## 3, 删除多余的binlong\\n\\n#### 背景：\\n没有设置自动生成binlog的情况，手动清除没用的binlog\\n\\n去从库看看\\n```\\nshow slave status;\\n```\\n\\n然后去主库\\n```\\nshow binary logs;##\\nshow master status;#查看同步状态，看同步到那个binlog \\npurge binary logs to 'mysql-bin.000410';#删除mysql-bin.000410以前的binlog 但不包含它\\n```\\n\\n\\n\\n\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><h2 id=\"1\">1. 主从同步出错处理</h2>\n<h3 id=\"\">背景</h3>\n<p>写入 table 的时候，因为程序bug，写入从库里面去了，下面解决的方法只适用于了：从库里面主动插入了一条新数据</p>\n<h3 id=\"\">解决步骤</h3>\n<p>1，查看错误log</p>\n<pre><code>show slave status;\n</code></pre>\n<p>找出出错的position，定位table<br>\n2，定位多插入的那一条数据，备份后并删除它<br>\n3，如果id是自增的话，需要把id还原</p>\n<pre><code>use db;//切换对应的数据库\nshow table status where name ='table'\\G;//查看当前的信息\n\nmysql&gt; show table status where name ='table'\\G;\n*************************** 1. row ***************************\n           Name: table\n         Engine: InnoDB\n        Version: 10\n     Row_format: Compressed\n           Rows: 52898364\n Avg_row_length: 55\n    Data_length: 2953576448\nMax_data_length: 0\n   Index_length: 0\n      Data_free: 3932160\n Auto_increment: 47447481\n    Create_time: 2016-07-22 11:38:00\n    Update_time: NULL\n     Check_time: NULL\n      Collation: utf8mb4_general_ci\n       Checksum: NULL\n Create_options: row_format=COMPRESSED KEY_BLOCK_SIZE=4\n        Comment: \n1 row in set (0.00 sec)\n</code></pre>\n<p>可以查询当前的<code>Auto_increment</code>值</p>\n<p>4，修改当前的<code>Auto_increment</code>值</p>\n<pre><code>alter table chat_msg AUTO_INCREMENT=xxxxx;\n</code></pre>\n<p>5，打开从库备份</p>\n<pre><code>start slave ;\n</code></pre>\n<p>开启后检查是否running</p>\n<pre><code>show  slave status\\G;\n</code></pre>\n<h2 id=\"2mysql\">2,检查mysql状态几个命令</h2>\n<pre><code class=\"language-mysql\">show slave status\\G;\nshow slave hosts\\G;\nshow processlist\\G;\n</code></pre>\n<h2 id=\"3binlong\">3, 删除多余的binlong</h2>\n<h4 id=\"\">背景：</h4>\n<p>没有设置自动生成binlog的情况，手动清除没用的binlog</p>\n<p>去从库看看</p>\n<pre><code>show slave status;\n</code></pre>\n<p>然后去主库</p>\n<pre><code>show binary logs;##\nshow master status;#查看同步状态，看同步到那个binlog \npurge binary logs to 'mysql-bin.000410';#删除mysql-bin.000410以前的binlog 但不包含它\n</code></pre>\n</div>","amp":null,"plaintext":"http://gan.d.diandian.com/","feature_image":"/content/images/2017/08/158ff09efbefe604ce3517b62506c804.png","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-01 11:51:22","created_by":"1","updated_at":"2017-08-02 02:25:45","updated_by":"1","published_at":"2017-08-02 02:22:06","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null},{"id":"598138a5d62a9854962c940a","uuid":"9c9c1ce2-9909-474f-a493-c4795e72e3b8","title":"centos安装face_recognition","slug":"centosan-zhuang","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"face_recognition是一个非常不错的人脸识别项目  https://github.com/ageitgey/face_recognition\\n其实依赖关键是 [`dlib`](http://dlib.net/) 他是一个机器学习的c++库  \\n\\n主要是用python3下运行\\n```\\nyum install python34\\nyum install python34-devel\\npip3 install cmake\\nyum install boost-devel \\nyum install make\\npip3 install dlib \\n```\\n\\n```\\n#yum install cmake\\nyum install boost-python\\nyum install python34-pip\\npip3 install face_recognition\\n```\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>face_recognition是一个非常不错的人脸识别项目  <a href=\"https://github.com/ageitgey/face_recognition\">https://github.com/ageitgey/face_recognition</a><br>\n其实依赖关键是 <a href=\"http://dlib.net/\"><code>dlib</code></a> 他是一个机器学习的c++库</p>\n<p>主要是用python3下运行</p>\n<pre><code>yum install python34\nyum install python34-devel\npip3 install cmake\nyum install boost-devel \nyum install make\npip3 install dlib \n</code></pre>\n<pre><code>#yum install cmake\nyum install boost-python\nyum install python34-pip\npip3 install face_recognition\n</code></pre>\n</div>","amp":null,"plaintext":"face_recognition是一个非常不错的人脸识别项目 https://github.com/ageitgey/face_recognition\n其实依赖关键是 dlib [http://dlib.net/]  他是一个机器学习的c++库\n\n主要是用python3下运行\n\nyum install python34\nyum install python34-devel\npip3 install cmake\nyum install boost-devel \nyum install make\npip3 install dlib \n\n\n#yum install cmake\nyum install boost-python\nyum install python34-pip\npip3 install face_recognition","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-02 02:27:49","created_by":"1","updated_at":"2017-08-02 02:31:38","updated_by":"1","published_at":"2017-08-02 02:31:38","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null},{"id":"59813996d62a9854962c940b","uuid":"707bf5fe-fe74-4b9c-b8e7-2cb508bfb530","title":"tensorflow 物体分类","slug":"wu-ti-shi-bie","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"这是一个官方例子，可以根据图片识别物体\\n\\n另外根据百度翻译对应的中文，但是有的翻译不准确，需要优化\\n\\n官方例子 https://www.tensorflow.org/tutorials/image_recognition\\n个人修改项目 https://github.com/hai046/tensorflowDemo/blob/master/README.md\\n\\n\\n![](https://www.tensorflow.org/images/AlexClassification.png)\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><p>这是一个官方例子，可以根据图片识别物体</p>\n<p>另外根据百度翻译对应的中文，但是有的翻译不准确，需要优化</p>\n<p>官方例子 <a href=\"https://www.tensorflow.org/tutorials/image_recognition\">https://www.tensorflow.org/tutorials/image_recognition</a><br>\n个人修改项目 <a href=\"https://github.com/hai046/tensorflowDemo/blob/master/README.md\">https://github.com/hai046/tensorflowDemo/blob/master/README.md</a></p>\n<p><img src=\"https://www.tensorflow.org/images/AlexClassification.png\" alt=\"\"></p>\n</div>","amp":null,"plaintext":"这是一个官方例子，可以根据图片识别物体\n\n另外根据百度翻译对应的中文，但是有的翻译不准确，需要优化\n\n官方例子 https://www.tensorflow.org/tutorials/image_recognition\n个人修改项目 https://github.com/hai046/tensorflowDemo/blob/master/README.md","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-02 02:31:50","created_by":"1","updated_at":"2017-08-03 02:30:02","updated_by":"1","published_at":"2017-08-02 02:37:55","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null},{"id":"5982b8d9616dac5789b9fa21","uuid":"b4110755-546d-4c58-88a8-4721f6b2e023","title":"MySQL utf8mb4  字符集","slug":"mysql","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"||utf8|utf8mb4\\n|-|-|-|\\n|长度|最大3byte|最大4byte|\\n|历史|一直在|5.5.3版本后增加\\n|兼容|N/S|完全兼容utf8\\n|emoji|一般不兼容，emoji一般是4个byte长度会出现编码异常|可以兼容|\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><table>\n<thead>\n<tr>\n<th></th>\n<th>utf8</th>\n<th>utf8mb4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>长度</td>\n<td>最大3byte</td>\n<td>最大4byte</td>\n</tr>\n<tr>\n<td>历史</td>\n<td>一直在</td>\n<td>5.5.3版本后增加</td>\n</tr>\n<tr>\n<td>兼容</td>\n<td>N/S</td>\n<td>完全兼容utf8</td>\n</tr>\n<tr>\n<td>emoji</td>\n<td>一般不兼容，emoji一般是4个byte长度会出现编码异常</td>\n<td>可以兼容</td>\n</tr>\n</tbody>\n</table>\n</div>","amp":null,"plaintext":"utf8utf8mb4长度最大3byte最大4byte历史一直在5.5.3版本后增加兼容N/S完全兼容utf8emoji\n一般不兼容，emoji一般是4个byte长度会出现编码异常可以兼容","feature_image":"/content/images/2017/08/f54311c5c36a5c96139288448a4f5e1a.jpg","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-03 05:47:05","created_by":"1","updated_at":"2017-08-03 06:03:37","updated_by":"1","published_at":"2017-08-03 05:57:45","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null},{"id":"5982c1c1616dac5789b9fa25","uuid":"fc76aa78-dc3d-4d75-97ae-3e7404c079b2","title":"过滤掉json里为null的json","slug":"guo-lu-diao-jsonwei-nullde-json","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"## python里面过滤\\n\\n\\n```python2\\n#python2 下使用\\ndef del_none(d):\\n   \\n    for key, value in d.items():\\n        if value is None:\\n            del d[key]\\n        elif isinstance(value, dict):\\n            del_none(value)\\n    return d  \\n\\n#python3  下使用\\ndef del_none(d):\\n    for key, value in d.copy().items():\\n        if value is None or value == '':\\n            del d[key]\\n        elif isinstance(value, dict):\\n            del_none(value)\\n    return d\\n\\n...............\\n\\nresult_dic = {\\n    'meta': {\\n        'metaCode': 'Success',\\n        'cost': cost,\\n        'timestamp': end,\\n        'postname': 'python'\\n\\n  },\\n    'data': {\\n        'image': image,\\n        'title': title\\n    }\\n}\\njson.dumps(del_none(result_dic))\\n```\\n\\n## golang里面过滤掉为null的字段\\n\\n定义`omitempty`即可\\n```go \\ntype imageInfo struct {\\n  Width           int `json:\\\"width,omitempty\\\"`\\n  Height          int `json:\\\"height,omitempty\\\"`\\n  Author          int `json:\\\"author,omitempty\\\"`\\n  Size            int64 `json:\\\"size,omitempty\\\"`\\n  Format          string `json:\\\"format,omitempty\\\"`\\n  Ua              string `json:\\\"ua,omitempty\\\"`\\n  DecoderPlatform string `json:\\\"DecoderPlatform,omitempty\\\"`\\n}\\n\\n```\\n\\n## java 过滤掉不用null字段\\ntoo simple to skip\\n\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><h2 id=\"python\">python里面过滤</h2>\n<pre><code class=\"language-python2\">#python2 下使用\ndef del_none(d):\n   \n    for key, value in d.items():\n        if value is None:\n            del d[key]\n        elif isinstance(value, dict):\n            del_none(value)\n    return d  \n\n#python3  下使用\ndef del_none(d):\n    for key, value in d.copy().items():\n        if value is None or value == '':\n            del d[key]\n        elif isinstance(value, dict):\n            del_none(value)\n    return d\n\n...............\n\nresult_dic = {\n    'meta': {\n        'metaCode': 'Success',\n        'cost': cost,\n        'timestamp': end,\n        'postname': 'python'\n\n  },\n    'data': {\n        'image': image,\n        'title': title\n    }\n}\njson.dumps(del_none(result_dic))\n</code></pre>\n<h2 id=\"golangnull\">golang里面过滤掉为null的字段</h2>\n<p>定义<code>omitempty</code>即可</p>\n<pre><code class=\"language-go\">type imageInfo struct {\n  Width           int `json:&quot;width,omitempty&quot;`\n  Height          int `json:&quot;height,omitempty&quot;`\n  Author          int `json:&quot;author,omitempty&quot;`\n  Size            int64 `json:&quot;size,omitempty&quot;`\n  Format          string `json:&quot;format,omitempty&quot;`\n  Ua              string `json:&quot;ua,omitempty&quot;`\n  DecoderPlatform string `json:&quot;DecoderPlatform,omitempty&quot;`\n}\n\n</code></pre>\n<h2 id=\"javanull\">java 过滤掉不用null字段</h2>\n<p>too simple to skip</p>\n</div>","amp":null,"plaintext":"python里面过滤\n#python2 下使用\ndef del_none(d):\n   \n    for key, value in d.items():\n        if value is None:\n            del d[key]\n        elif isinstance(value, dict):\n            del_none(value)\n    return d  \n\n#python3  下使用\ndef del_none(d):\n    for key, value in d.copy().items():\n        if value is None or value == '':\n            del d[key]\n        elif isinstance(value, dict):\n            del_none(value)\n    return d\n\n...............\n\nresult_dic = {\n    'meta': {\n        'metaCode': 'Success',\n        'cost': cost,\n        'timestamp': end,\n        'postname': 'python'\n\n  },\n    'data': {\n        'image': image,\n        'title': title\n    }\n}\njson.dumps(del_none(result_dic))\n\n\ngolang里面过滤掉为null的字段\n定义omitempty即可\n\ntype imageInfo struct {\n  Width           int `json:\"width,omitempty\"`\n  Height          int `json:\"height,omitempty\"`\n  Author          int `json:\"author,omitempty\"`\n  Size            int64 `json:\"size,omitempty\"`\n  Format          string `json:\"format,omitempty\"`\n  Ua              string `json:\"ua,omitempty\"`\n  DecoderPlatform string `json:\"DecoderPlatform,omitempty\"`\n}\n\n\n\njava 过滤掉不用null字段\ntoo simple to skip","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-03 06:25:05","created_by":"1","updated_at":"2017-08-03 06:27:52","updated_by":"1","published_at":"2017-08-03 06:27:49","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null},{"id":"5982cb8b616dac5789b9fa2c","uuid":"6ab99913-5a8c-4cc5-9320-249343dc1cf4","title":"thrift golang server实现","slug":"thrift-golang","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"## 背景\\nhttps://thrift.apache.org/ 例子里面只有golang client的实现，没有具体的server的实现，这里通过查看java的实现进而推出来了golang server端的实现\\n\\n\\n\\n```golang\\nfunc RunServer() {\\n    .....#忽略前面addr神马的初始化\\n\\tlog.Println(\\\"enable video upload server addr\\\", addr)\\n\\ttransport, err := thrift.NewTServerSocket(addr)\\n\\n\\tlog.Println(\\\"NewTServerSocket  addr\\\", addr)\\n\\n    //这里需要和对应的语言method name params等等要一一对应上\\n\\thandler := &UploadVideoHandler{}\\n\\n\\tprocessor := NewUploadVideoProcessor(handler)\\n\\t\\n    //这里TransportFactory ProtocolFactory 都要一一对对应上，否则不通\\n\\tserver := thrift.NewTSimpleServer4(processor, transport,\\n\\t\\tthrift.NewTFramedTransportFactory(thrift.NewTTransportFactory()),\\n\\t\\tthrift.NewTCompactProtocolFactory())\\n\\n\\tlog.Println(\\\"Starting the simple server... on \\\", addr)\\n\\tserver.Serve()\\n}\\n\\ntype UploadVideoHandler struct{}\\n#服务端具体实现\\nfunc (p *UploadVideoHandler) Write(buffer []byte) (string, error) {\\n\\n\\t_, video_uuid, _, err := UploadVideo(buffer, 0, true, \\\"\\\", \\\"\\\")\\n\\n\\treturn video_uuid, err\\n}\\n\\n\\n```\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><h2 id=\"\">背景</h2>\n<p><a href=\"https://thrift.apache.org/\">https://thrift.apache.org/</a> 例子里面只有golang client的实现，没有具体的server的实现，这里通过查看java的实现进而推出来了golang server端的实现</p>\n<pre><code class=\"language-golang\">func RunServer() {\n    .....#忽略前面addr神马的初始化\n\tlog.Println(&quot;enable video upload server addr&quot;, addr)\n\ttransport, err := thrift.NewTServerSocket(addr)\n\n\tlog.Println(&quot;NewTServerSocket  addr&quot;, addr)\n\n    //这里需要和对应的语言method name params等等要一一对应上\n\thandler := &amp;UploadVideoHandler{}\n\n\tprocessor := NewUploadVideoProcessor(handler)\n\t\n    //这里TransportFactory ProtocolFactory 都要一一对对应上，否则不通\n\tserver := thrift.NewTSimpleServer4(processor, transport,\n\t\tthrift.NewTFramedTransportFactory(thrift.NewTTransportFactory()),\n\t\tthrift.NewTCompactProtocolFactory())\n\n\tlog.Println(&quot;Starting the simple server... on &quot;, addr)\n\tserver.Serve()\n}\n\ntype UploadVideoHandler struct{}\n#服务端具体实现\nfunc (p *UploadVideoHandler) Write(buffer []byte) (string, error) {\n\n\t_, video_uuid, _, err := UploadVideo(buffer, 0, true, &quot;&quot;, &quot;&quot;)\n\n\treturn video_uuid, err\n}\n\n\n</code></pre>\n</div>","amp":null,"plaintext":"背景\nhttps://thrift.apache.org/  例子里面只有golang\nclient的实现，没有具体的server的实现，这里通过查看java的实现进而推出来了golang server端的实现\n\nfunc RunServer() {\n    .....#忽略前面addr神马的初始化\n\tlog.Println(\"enable video upload server addr\", addr)\n\ttransport, err := thrift.NewTServerSocket(addr)\n\n\tlog.Println(\"NewTServerSocket  addr\", addr)\n\n    //这里需要和对应的语言method name params等等要一一对应上\n\thandler := &UploadVideoHandler{}\n\n\tprocessor := NewUploadVideoProcessor(handler)\n\t\n    //这里TransportFactory ProtocolFactory 都要一一对对应上，否则不通\n\tserver := thrift.NewTSimpleServer4(processor, transport,\n\t\tthrift.NewTFramedTransportFactory(thrift.NewTTransportFactory()),\n\t\tthrift.NewTCompactProtocolFactory())\n\n\tlog.Println(\"Starting the simple server... on \", addr)\n\tserver.Serve()\n}\n\ntype UploadVideoHandler struct{}\n#服务端具体实现\nfunc (p *UploadVideoHandler) Write(buffer []byte) (string, error) {\n\n\t_, video_uuid, _, err := UploadVideo(buffer, 0, true, \"\", \"\")\n\n\treturn video_uuid, err\n}","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-03 07:06:51","created_by":"1","updated_at":"2017-08-03 07:14:13","updated_by":"1","published_at":"2017-08-03 07:13:30","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null},{"id":"5982cded616dac5789b9fa30","uuid":"a723da42-8adb-404d-a83d-46de87deefb9","title":"fix golang gif 解密器兼容","slug":"fix_golang_gif","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"## 背景\\n最近发现`go1.8.1`版本在处理用户传过来 faceU 的gif图片会报\\n`frame bounds larger than image bounds`\\n\\n也就是gif里面帧大约外边大小\\n\\n`gif/render.go`实现\\n```\\nfunc (d *decoder) newImageFromDescriptor() (*image.Paletted, error) {\\n\\tif err := readFull(d.r, d.tmp[:9]); err != nil {\\n\\t\\treturn nil, fmt.Errorf(\\\"gif: can't read image descriptor: %s\\\", err)\\n\\t}\\n\\tleft := int(d.tmp[0]) + int(d.tmp[1])<<8\\n\\ttop := int(d.tmp[2]) + int(d.tmp[3])<<8\\n\\twidth := int(d.tmp[4]) + int(d.tmp[5])<<8\\n\\theight := int(d.tmp[6]) + int(d.tmp[7])<<8\\n\\td.imageFields = d.tmp[8]\\n\\n\\t// The GIF89a spec, Section 20 (Image Descriptor) says:\\n\\t// \\\"Each image must fit within the boundaries of the Logical\\n\\t// Screen, as defined in the Logical Screen Descriptor.\\\"\\n\\tbounds := image.Rect(left, top, left+width, top+height)\\n\\tif bounds != bounds.Intersect(image.Rect(0, 0, d.width, d.height)) {\\n\\t\\treturn nil, errors.New(\\\"gif: frame bounds larger than image bounds\\\")\\n\\t}\\n\\treturn image.NewPaletted(bounds, nil), nil\\n}\\n```\\n做了很详细很精确的判断，里面的每一帧都不能大于外边框\\n\\n抱怨一下：\\n虽然规范是定义很清楚，但是很多人是不严格遵守，大部分显示gif的软件也不严格检查这样的偏差，还能看，所以我就收到反馈，为何别人都能显示，就你的不行，肯定是你的问题，fuck！\\n\\n虽然很愤怒但是还是含泪修改，虽然golang官方已经收到issues但是但是最新版还是不能兼容\\n故自己动手修改了一下放在自己工厂目录， 自己引用\\n\\njiemo_gif/reader.go\\n```\\nfunc (d *decoder) newImageFromDescriptor() (*image.Paletted, error) {\\n\\tif err := readFull(d.r, d.tmp[:9]); err != nil {\\n\\t\\treturn nil, fmt.Errorf(\\\"gif: can't read image descriptor: %s\\\", err)\\n\\t}\\n\\tleft := int(d.tmp[0]) + int(d.tmp[1])<<8\\n\\ttop := int(d.tmp[2]) + int(d.tmp[3])<<8\\n\\twidth := int(d.tmp[4]) + int(d.tmp[5])<<8\\n\\theight := int(d.tmp[6]) + int(d.tmp[7])<<8\\n\\td.imageFields = d.tmp[8]\\n\\n    //这里兼容一下，不过我只能容忍每一帧大于1px，我是有底线的！\\n\\tif left+width-1 > d.width || top+height-1 > d.height {\\n\\t\\treturn nil, errors.New(\\\"haio46 Fix  gif: frame bounds larger than image bounds\\\")\\n\\t}\\n\\treturn image.NewPaletted(image.Rectangle{\\n\\t\\tMin: image.Point{left, top},\\n\\t\\tMax: image.Point{left + width, top + height},\\n\\t}, nil), nil\\n}\\n\\n```\\n\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><h2 id=\"\">背景</h2>\n<p>最近发现<code>go1.8.1</code>版本在处理用户传过来 faceU 的gif图片会报<br>\n<code>frame bounds larger than image bounds</code></p>\n<p>也就是gif里面帧大约外边大小</p>\n<p><code>gif/render.go</code>实现</p>\n<pre><code>func (d *decoder) newImageFromDescriptor() (*image.Paletted, error) {\n\tif err := readFull(d.r, d.tmp[:9]); err != nil {\n\t\treturn nil, fmt.Errorf(&quot;gif: can't read image descriptor: %s&quot;, err)\n\t}\n\tleft := int(d.tmp[0]) + int(d.tmp[1])&lt;&lt;8\n\ttop := int(d.tmp[2]) + int(d.tmp[3])&lt;&lt;8\n\twidth := int(d.tmp[4]) + int(d.tmp[5])&lt;&lt;8\n\theight := int(d.tmp[6]) + int(d.tmp[7])&lt;&lt;8\n\td.imageFields = d.tmp[8]\n\n\t// The GIF89a spec, Section 20 (Image Descriptor) says:\n\t// &quot;Each image must fit within the boundaries of the Logical\n\t// Screen, as defined in the Logical Screen Descriptor.&quot;\n\tbounds := image.Rect(left, top, left+width, top+height)\n\tif bounds != bounds.Intersect(image.Rect(0, 0, d.width, d.height)) {\n\t\treturn nil, errors.New(&quot;gif: frame bounds larger than image bounds&quot;)\n\t}\n\treturn image.NewPaletted(bounds, nil), nil\n}\n</code></pre>\n<p>做了很详细很精确的判断，里面的每一帧都不能大于外边框</p>\n<p>抱怨一下：<br>\n虽然规范是定义很清楚，但是很多人是不严格遵守，大部分显示gif的软件也不严格检查这样的偏差，还能看，所以我就收到反馈，为何别人都能显示，就你的不行，肯定是你的问题，fuck！</p>\n<p>虽然很愤怒但是还是含泪修改，虽然golang官方已经收到issues但是但是最新版还是不能兼容<br>\n故自己动手修改了一下放在自己工厂目录， 自己引用</p>\n<p>jiemo_gif/reader.go</p>\n<pre><code>func (d *decoder) newImageFromDescriptor() (*image.Paletted, error) {\n\tif err := readFull(d.r, d.tmp[:9]); err != nil {\n\t\treturn nil, fmt.Errorf(&quot;gif: can't read image descriptor: %s&quot;, err)\n\t}\n\tleft := int(d.tmp[0]) + int(d.tmp[1])&lt;&lt;8\n\ttop := int(d.tmp[2]) + int(d.tmp[3])&lt;&lt;8\n\twidth := int(d.tmp[4]) + int(d.tmp[5])&lt;&lt;8\n\theight := int(d.tmp[6]) + int(d.tmp[7])&lt;&lt;8\n\td.imageFields = d.tmp[8]\n\n    //这里兼容一下，不过我只能容忍每一帧大于1px，我是有底线的！\n\tif left+width-1 &gt; d.width || top+height-1 &gt; d.height {\n\t\treturn nil, errors.New(&quot;haio46 Fix  gif: frame bounds larger than image bounds&quot;)\n\t}\n\treturn image.NewPaletted(image.Rectangle{\n\t\tMin: image.Point{left, top},\n\t\tMax: image.Point{left + width, top + height},\n\t}, nil), nil\n}\n\n</code></pre>\n</div>","amp":null,"plaintext":"背景\n最近发现go1.8.1版本在处理用户传过来 faceU 的gif图片会报\nframe bounds larger than image bounds\n\n也就是gif里面帧大约外边大小\n\ngif/render.go实现\n\nfunc (d *decoder) newImageFromDescriptor() (*image.Paletted, error) {\n\tif err := readFull(d.r, d.tmp[:9]); err != nil {\n\t\treturn nil, fmt.Errorf(\"gif: can't read image descriptor: %s\", err)\n\t}\n\tleft := int(d.tmp[0]) + int(d.tmp[1])<<8\n\ttop := int(d.tmp[2]) + int(d.tmp[3])<<8\n\twidth := int(d.tmp[4]) + int(d.tmp[5])<<8\n\theight := int(d.tmp[6]) + int(d.tmp[7])<<8\n\td.imageFields = d.tmp[8]\n\n\t// The GIF89a spec, Section 20 (Image Descriptor) says:\n\t// \"Each image must fit within the boundaries of the Logical\n\t// Screen, as defined in the Logical Screen Descriptor.\"\n\tbounds := image.Rect(left, top, left+width, top+height)\n\tif bounds != bounds.Intersect(image.Rect(0, 0, d.width, d.height)) {\n\t\treturn nil, errors.New(\"gif: frame bounds larger than image bounds\")\n\t}\n\treturn image.NewPaletted(bounds, nil), nil\n}\n\n\n做了很详细很精确的判断，里面的每一帧都不能大于外边框\n\n抱怨一下：\n虽然规范是定义很清楚，但是很多人是不严格遵守，大部分显示gif的软件也不严格检查这样的偏差，还能看，所以我就收到反馈，为何别人都能显示，就你的不行，肯定是你的问题，fuck！\n\n虽然很愤怒但是还是含泪修改，虽然golang官方已经收到issues但是但是最新版还是不能兼容\n故自己动手修改了一下放在自己工厂目录， 自己引用\n\njiemo_gif/reader.go\n\nfunc (d *decoder) newImageFromDescriptor() (*image.Paletted, error) {\n\tif err := readFull(d.r, d.tmp[:9]); err != nil {\n\t\treturn nil, fmt.Errorf(\"gif: can't read image descriptor: %s\", err)\n\t}\n\tleft := int(d.tmp[0]) + int(d.tmp[1])<<8\n\ttop := int(d.tmp[2]) + int(d.tmp[3])<<8\n\twidth := int(d.tmp[4]) + int(d.tmp[5])<<8\n\theight := int(d.tmp[6]) + int(d.tmp[7])<<8\n\td.imageFields = d.tmp[8]\n\n    //这里兼容一下，不过我只能容忍每一帧大于1px，我是有底线的！\n\tif left+width-1 > d.width || top+height-1 > d.height {\n\t\treturn nil, errors.New(\"haio46 Fix  gif: frame bounds larger than image bounds\")\n\t}\n\treturn image.NewPaletted(image.Rectangle{\n\t\tMin: image.Point{left, top},\n\t\tMax: image.Point{left + width, top + height},\n\t}, nil), nil\n}","feature_image":"/content/images/2017/08/timg-1.gif","featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-03 07:17:01","created_by":"1","updated_at":"2017-08-03 07:51:09","updated_by":"1","published_at":"2017-08-03 07:30:05","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null},{"id":"5982dcd9616dac5789b9fa36","uuid":"521a63db-12c0-44a1-8fa7-eb428a0f5358","title":"图片处理项目手机","slug":"tu-pian-chu-li-xiang-mu-shou-ji","mobiledoc":"{\"version\":\"0.3.1\",\"markups\":[],\"atoms\":[],\"cards\":[[\"card-markdown\",{\"cardName\":\"card-markdown\",\"markdown\":\"## 背景\\n手机图片处理相关的项目，先收集慢慢研究\\n|序号|项目|说明|\\n|-|-|-|\\n|1|[face_recognition](https://github.com/ageitgey/face_recognition)|人脸识别和比对，比较人脸直接的差距,描绘人脸坐标|\\n|2|[image_recognition](https://www.tensorflow.org/tutorials/image_recognition)|识别图片里面物体  使用tensorflow|\\n3|[primitive](https://github.com/fogleman/primitive)|可以把图片处理成一定风格，例如像手绘  使用golang\\n4|[have-fun-with-machine-learning](https://github.com/humphd/have-fun-with-machine-learning)|机器学习与神经网络图像分类的初级指南，使用Caffe|\\n5|[label_image](https://github.com/tensorflow/tensorflow/blob/r1.2/tensorflow/examples/label_image/README.md)|识别图片分裂，比项目2`image_recognition`的识别率高\"}]],\"sections\":[[10,0]]}","html":"<div class=\"kg-card-markdown\"><h2 id=\"\">背景</h2>\n<p>手机图片处理相关的项目，先收集慢慢研究</p>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>项目</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td><a href=\"https://github.com/ageitgey/face_recognition\">face_recognition</a></td>\n<td>人脸识别和比对，比较人脸直接的差距,描绘人脸坐标</td>\n</tr>\n<tr>\n<td>2</td>\n<td><a href=\"https://www.tensorflow.org/tutorials/image_recognition\">image_recognition</a></td>\n<td>识别图片里面物体  使用tensorflow</td>\n</tr>\n<tr>\n<td>3</td>\n<td><a href=\"https://github.com/fogleman/primitive\">primitive</a></td>\n<td>可以把图片处理成一定风格，例如像手绘  使用golang</td>\n</tr>\n<tr>\n<td>4</td>\n<td><a href=\"https://github.com/humphd/have-fun-with-machine-learning\">have-fun-with-machine-learning</a></td>\n<td>机器学习与神经网络图像分类的初级指南，使用Caffe</td>\n</tr>\n<tr>\n<td>5</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/blob/r1.2/tensorflow/examples/label_image/README.md\">label_image</a></td>\n<td>识别图片分裂，比项目2<code>image_recognition</code>的识别率高</td>\n</tr>\n</tbody>\n</table>\n</div>","amp":null,"plaintext":"背景\n手机图片处理相关的项目，先收集慢慢研究\n\n序号项目说明1face_recognition [https://github.com/ageitgey/face_recognition]\n人脸识别和比对，比较人脸直接的差距,描绘人脸坐标2image_recognition\n[https://www.tensorflow.org/tutorials/image_recognition]识别图片里面物体 使用tensorflow3\nprimitive [https://github.com/fogleman/primitive]可以把图片处理成一定风格，例如像手绘 使用golang4\nhave-fun-with-machine-learning\n[https://github.com/humphd/have-fun-with-machine-learning]\n机器学习与神经网络图像分类的初级指南，使用Caffe5label_image\n[https://github.com/tensorflow/tensorflow/blob/r1.2/tensorflow/examples/label_image/README.md]\n识别图片分裂，比项目2image_recognition的识别率高","feature_image":null,"featured":0,"page":0,"status":"published","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"author_id":"1","created_at":"2017-08-03 08:20:41","created_by":"1","updated_at":"2017-08-04 10:06:33","updated_by":"1","published_at":"2017-08-03 08:30:03","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null}],"users":[{"id":"1","name":"hai046","slug":"hai046","ghost_auth_access_token":null,"ghost_auth_id":null,"password":"$2a$10$.eFhR.Bh9IoRD21xblaU2uHcCIQUrQtO.aiC85dIsgHNPwsB/cbYm","email":"haizhu12345@gmail.com","profile_image":"/content/images/2017/08/1.png","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":"[\"upload-a-theme\"]","last_seen":"2017-08-09 05:47:42","created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-09 05:47:42","updated_by":"1"},{"id":"5951f5fca366002ebd5dbef7","name":"Ghost","slug":"ghost","ghost_auth_access_token":null,"ghost_auth_id":null,"password":"$2a$10$xE08vsqeDuZxoK5wXbZJWOw4jWw8VG3vNlT7YDQTOeTt4UQcY7AtO","email":"ghost-author@example.com","profile_image":null,"cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59829a58616dac5789b9fa19","name":"scoop","slug":"scoop","ghost_auth_access_token":null,"ghost_auth_id":null,"password":"$2a$10$Yh2s74TKOCxNQYATZoUGeO3JFVrk.Y0995zsvvZvx2IxQ1UdQEr32","email":"longscoop@gmail.com","profile_image":null,"cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":"2017-08-03 03:36:56","created_at":"2017-08-03 03:36:56","created_by":"1","updated_at":"2017-08-03 03:36:56","updated_by":"59829a58616dac5789b9fa19"},{"id":"59829ac7616dac5789b9fa1d","name":"Mr's Ma","slug":"mrs","ghost_auth_access_token":null,"ghost_auth_id":null,"password":"$2a$10$oDCYSireND.WmnxBXTPpB.ergAJ7hObOY.NHdnlA0iPcFm2Ywqw96","email":"xiaomapds@163.com","profile_image":null,"cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":null,"accessibility":null,"status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":"2017-08-03 03:38:48","created_at":"2017-08-03 03:38:47","created_by":"1","updated_at":"2017-08-03 03:38:48","updated_by":"59829ac7616dac5789b9fa1d"}],"roles":[{"id":"59805314cc08c852733d222d","name":"Administrator","description":"Administrators","created_at":"2017-08-01 10:08:20","created_by":"1","updated_at":"2017-08-01 10:08:20","updated_by":"1"},{"id":"59805314cc08c852733d222e","name":"Editor","description":"Editors","created_at":"2017-08-01 10:08:20","created_by":"1","updated_at":"2017-08-01 10:08:20","updated_by":"1"},{"id":"59805314cc08c852733d222f","name":"Author","description":"Authors","created_at":"2017-08-01 10:08:20","created_by":"1","updated_at":"2017-08-01 10:08:20","updated_by":"1"},{"id":"59805314cc08c852733d2230","name":"Owner","description":"Blog Owner","created_at":"2017-08-01 10:08:20","created_by":"1","updated_at":"2017-08-01 10:08:20","updated_by":"1"}],"roles_users":[{"id":"59805315cc08c852733d2262","role_id":"59805314cc08c852733d222f","user_id":"5951f5fca366002ebd5dbef7"},{"id":"59805316cc08c852733d22cc","role_id":"59805314cc08c852733d2230","user_id":"1"},{"id":"59829a58616dac5789b9fa1a","role_id":"59805314cc08c852733d222e","user_id":"59829a58616dac5789b9fa19"},{"id":"59829ac8616dac5789b9fa1e","role_id":"59805314cc08c852733d222e","user_id":"59829ac7616dac5789b9fa1d"}],"permissions":[{"id":"59805314cc08c852733d2231","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2017-08-01 10:08:20","created_by":"1","updated_at":"2017-08-01 10:08:20","updated_by":"1"},{"id":"59805314cc08c852733d2232","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2017-08-01 10:08:20","created_by":"1","updated_at":"2017-08-01 10:08:20","updated_by":"1"},{"id":"59805314cc08c852733d2233","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2017-08-01 10:08:20","created_by":"1","updated_at":"2017-08-01 10:08:20","updated_by":"1"},{"id":"59805314cc08c852733d2234","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2017-08-01 10:08:20","created_by":"1","updated_at":"2017-08-01 10:08:20","updated_by":"1"},{"id":"59805315cc08c852733d2235","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2236","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2237","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2238","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2239","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d223a","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d223b","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d223c","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d223d","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d223e","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d223f","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2240","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2241","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2242","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2243","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2244","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2245","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2246","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2247","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2248","name":"Activate themes","object_type":"theme","action_type":"activate","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2249","name":"Upload themes","object_type":"theme","action_type":"add","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d224a","name":"Download themes","object_type":"theme","action_type":"read","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d224b","name":"Delete themes","object_type":"theme","action_type":"destroy","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d224c","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d224d","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d224e","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d224f","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2250","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2251","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2252","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2253","name":"Browse clients","object_type":"client","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2254","name":"Read clients","object_type":"client","action_type":"read","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2255","name":"Edit clients","object_type":"client","action_type":"edit","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2256","name":"Add clients","object_type":"client","action_type":"add","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2257","name":"Delete clients","object_type":"client","action_type":"destroy","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2258","name":"Browse subscribers","object_type":"subscriber","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2259","name":"Read subscribers","object_type":"subscriber","action_type":"read","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d225a","name":"Edit subscribers","object_type":"subscriber","action_type":"edit","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d225b","name":"Add subscribers","object_type":"subscriber","action_type":"add","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d225c","name":"Delete subscribers","object_type":"subscriber","action_type":"destroy","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d225d","name":"Browse invites","object_type":"invite","action_type":"browse","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d225e","name":"Read invites","object_type":"invite","action_type":"read","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d225f","name":"Edit invites","object_type":"invite","action_type":"edit","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2260","name":"Add invites","object_type":"invite","action_type":"add","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"},{"id":"59805315cc08c852733d2261","name":"Delete invites","object_type":"invite","action_type":"destroy","object_id":null,"created_at":"2017-08-01 10:08:21","created_by":"1","updated_at":"2017-08-01 10:08:21","updated_by":"1"}],"permissions_users":[],"permissions_roles":[{"id":"59805315cc08c852733d2263","role_id":"59805314cc08c852733d222d","permission_id":"59805314cc08c852733d2231"},{"id":"59805315cc08c852733d2264","role_id":"59805314cc08c852733d222d","permission_id":"59805314cc08c852733d2232"},{"id":"59805315cc08c852733d2265","role_id":"59805314cc08c852733d222d","permission_id":"59805314cc08c852733d2233"},{"id":"59805315cc08c852733d2266","role_id":"59805314cc08c852733d222d","permission_id":"59805314cc08c852733d2234"},{"id":"59805315cc08c852733d2267","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2235"},{"id":"59805315cc08c852733d2268","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2236"},{"id":"59805315cc08c852733d2269","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2237"},{"id":"59805315cc08c852733d226a","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2238"},{"id":"59805315cc08c852733d226b","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2239"},{"id":"59805315cc08c852733d226c","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d223a"},{"id":"59805315cc08c852733d226d","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d223b"},{"id":"59805315cc08c852733d226e","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d223c"},{"id":"59805315cc08c852733d226f","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d223d"},{"id":"59805315cc08c852733d2270","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d223e"},{"id":"59805315cc08c852733d2271","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d223f"},{"id":"59805315cc08c852733d2272","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2240"},{"id":"59805315cc08c852733d2273","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2241"},{"id":"59805315cc08c852733d2274","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2242"},{"id":"59805315cc08c852733d2275","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2243"},{"id":"59805315cc08c852733d2276","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2244"},{"id":"59805315cc08c852733d2277","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2245"},{"id":"59805315cc08c852733d2278","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2246"},{"id":"59805315cc08c852733d2279","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2247"},{"id":"59805315cc08c852733d227a","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2248"},{"id":"59805315cc08c852733d227b","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2249"},{"id":"59805315cc08c852733d227c","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d224a"},{"id":"59805315cc08c852733d227d","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d224b"},{"id":"59805315cc08c852733d227e","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d224c"},{"id":"59805315cc08c852733d227f","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d224d"},{"id":"59805315cc08c852733d2280","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d224e"},{"id":"59805315cc08c852733d2281","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d224f"},{"id":"59805315cc08c852733d2282","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2250"},{"id":"59805315cc08c852733d2283","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2251"},{"id":"59805315cc08c852733d2284","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2252"},{"id":"59805315cc08c852733d2285","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2253"},{"id":"59805315cc08c852733d2286","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2254"},{"id":"59805315cc08c852733d2287","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2255"},{"id":"59805315cc08c852733d2288","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2256"},{"id":"59805315cc08c852733d2289","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2257"},{"id":"59805315cc08c852733d228a","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2258"},{"id":"59805315cc08c852733d228b","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2259"},{"id":"59805315cc08c852733d228c","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d225a"},{"id":"59805315cc08c852733d228d","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d225b"},{"id":"59805315cc08c852733d228e","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d225c"},{"id":"59805315cc08c852733d228f","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d225d"},{"id":"59805315cc08c852733d2290","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d225e"},{"id":"59805315cc08c852733d2291","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d225f"},{"id":"59805315cc08c852733d2292","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2260"},{"id":"59805315cc08c852733d2293","role_id":"59805314cc08c852733d222d","permission_id":"59805315cc08c852733d2261"},{"id":"59805315cc08c852733d2294","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2238"},{"id":"59805315cc08c852733d2295","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2239"},{"id":"59805315cc08c852733d2296","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d223a"},{"id":"59805315cc08c852733d2297","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d223b"},{"id":"59805315cc08c852733d2298","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d223c"},{"id":"59805315cc08c852733d2299","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d223d"},{"id":"59805315cc08c852733d229a","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d223e"},{"id":"59805315cc08c852733d229b","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2240"},{"id":"59805315cc08c852733d229c","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2241"},{"id":"59805315cc08c852733d229d","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2242"},{"id":"59805315cc08c852733d229e","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2243"},{"id":"59805315cc08c852733d229f","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2244"},{"id":"59805315cc08c852733d22a0","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2245"},{"id":"59805315cc08c852733d22a1","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d224c"},{"id":"59805315cc08c852733d22a2","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d224d"},{"id":"59805315cc08c852733d22a3","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d224e"},{"id":"59805315cc08c852733d22a4","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d224f"},{"id":"59805315cc08c852733d22a5","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2250"},{"id":"59805315cc08c852733d22a6","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2251"},{"id":"59805315cc08c852733d22a7","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2252"},{"id":"59805315cc08c852733d22a8","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2253"},{"id":"59805315cc08c852733d22a9","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2254"},{"id":"59805315cc08c852733d22aa","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2255"},{"id":"59805315cc08c852733d22ab","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2256"},{"id":"59805315cc08c852733d22ac","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2257"},{"id":"59805315cc08c852733d22ad","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d225b"},{"id":"59805315cc08c852733d22ae","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d225d"},{"id":"59805315cc08c852733d22af","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d225e"},{"id":"59805315cc08c852733d22b0","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d225f"},{"id":"59805315cc08c852733d22b1","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2260"},{"id":"59805315cc08c852733d22b2","role_id":"59805314cc08c852733d222e","permission_id":"59805315cc08c852733d2261"},{"id":"59805315cc08c852733d22b3","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2238"},{"id":"59805315cc08c852733d22b4","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2239"},{"id":"59805315cc08c852733d22b5","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d223b"},{"id":"59805316cc08c852733d22b6","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d223d"},{"id":"59805316cc08c852733d22b7","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d223e"},{"id":"59805316cc08c852733d22b8","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2240"},{"id":"59805316cc08c852733d22b9","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2241"},{"id":"59805316cc08c852733d22ba","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2242"},{"id":"59805316cc08c852733d22bb","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2244"},{"id":"59805316cc08c852733d22bc","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d224c"},{"id":"59805316cc08c852733d22bd","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d224d"},{"id":"59805316cc08c852733d22be","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2252"},{"id":"59805316cc08c852733d22bf","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2253"},{"id":"59805316cc08c852733d22c0","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2254"},{"id":"59805316cc08c852733d22c1","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2255"},{"id":"59805316cc08c852733d22c2","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2256"},{"id":"59805316cc08c852733d22c3","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d2257"},{"id":"59805316cc08c852733d22c4","role_id":"59805314cc08c852733d222f","permission_id":"59805315cc08c852733d225b"}],"permissions_apps":[],"settings":[{"id":"598053188b6b9f5294dd27a0","key":"db_hash","value":"5648e0c9-a7e0-4b23-b93f-d64a8444bafe","type":"core","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-01 10:08:24","updated_by":"1"},{"id":"598053188b6b9f5294dd27a1","key":"next_update_check","value":"1502344061","type":"core","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-09 05:47:40","updated_by":"1"},{"id":"598053188b6b9f5294dd27a2","key":"display_update_notification","value":"1.5.1","type":"core","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-09 05:47:40","updated_by":"1"},{"id":"598053188b6b9f5294dd27a3","key":"seen_notifications","value":"[]","type":"core","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-01 10:08:24","updated_by":"1"},{"id":"598053188b6b9f5294dd27a4","key":"title","value":"小撸怡情博客屋","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27a5","key":"description","value":"记录学习生活的点滴，留住我们前进的足迹","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27a6","key":"logo","value":"","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27a7","key":"cover_image","value":"/content/images/2017/08/bg-1.jpeg","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27a8","key":"icon","value":"","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27a9","key":"default_locale","value":"en","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27aa","key":"active_timezone","value":"Asia/Hong_Kong","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27ab","key":"force_i18n","value":"true","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27ac","key":"permalinks","value":"/:year/:month/:day/:slug/","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27ad","key":"amp","value":"true","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27ae","key":"ghost_head","value":"","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27af","key":"ghost_foot","value":"","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27b0","key":"facebook","value":"","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27b1","key":"twitter","value":"","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27b2","key":"labs","value":"{\"publicAPI\":false}","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27b3","key":"navigation","value":"[]","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27b4","key":"slack","value":"[{\"url\":\"\"}]","type":"blog","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27b5","key":"active_theme","value":"casper","type":"theme","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-01 10:08:24","updated_by":"1"},{"id":"598053188b6b9f5294dd27b6","key":"active_apps","value":"[]","type":"app","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-01 10:08:24","updated_by":"1"},{"id":"598053188b6b9f5294dd27b7","key":"installed_apps","value":"[]","type":"app","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 02:29:43","updated_by":"1"},{"id":"598053188b6b9f5294dd27b8","key":"is_private","value":"false","type":"private","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"},{"id":"598053188b6b9f5294dd27b9","key":"password","value":"","type":"private","created_at":"2017-08-01 10:08:24","created_by":"1","updated_at":"2017-08-03 06:11:50","updated_by":"1"}],"tags":[{"id":"59805314cc08c852733d2229","name":"Getting Started","slug":"getting-started","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-01 10:08:20","created_by":"1","updated_at":"2017-08-01 10:08:20","updated_by":"1"},{"id":"5980662d8b6b9f5294dd27bf","name":"phone","slug":"phone","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-01 11:29:49","created_by":"1","updated_at":"2017-08-01 11:29:49","updated_by":"1"},{"id":"5980662d8b6b9f5294dd27c1","name":"encryption","slug":"encryption","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-01 11:29:49","created_by":"1","updated_at":"2017-08-01 11:29:49","updated_by":"1"},{"id":"59813829d62a9854962c9408","name":"mysql","slug":"mysql","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-02 02:25:45","created_by":"1","updated_at":"2017-08-02 02:25:45","updated_by":"1"},{"id":"59813b03d62a9854962c940c","name":"tensorflow","slug":"tensorflow","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-02 02:37:55","created_by":"1","updated_at":"2017-08-02 02:37:55","updated_by":"1"},{"id":"59813b03d62a9854962c940e","name":"学习笔记","slug":"xue-xi-bi-ji","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-02 02:37:55","created_by":"1","updated_at":"2017-08-02 02:37:55","updated_by":"1"},{"id":"5982c265616dac5789b9fa26","name":"json","slug":"json","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-03 06:27:49","created_by":"1","updated_at":"2017-08-03 06:27:49","updated_by":"1"},{"id":"5982c265616dac5789b9fa28","name":"golang","slug":"golang","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-03 06:27:49","created_by":"1","updated_at":"2017-08-03 06:27:49","updated_by":"1"},{"id":"5982c265616dac5789b9fa2a","name":"python","slug":"python","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-03 06:27:49","created_by":"1","updated_at":"2017-08-03 06:27:49","updated_by":"1"},{"id":"5982cd1a616dac5789b9fa2e","name":"thrift","slug":"thrift","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-03 07:13:30","created_by":"1","updated_at":"2017-08-03 07:13:30","updated_by":"1"},{"id":"5982d195616dac5789b9fa32","name":"gif","slug":"gif","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-03 07:32:37","created_by":"1","updated_at":"2017-08-03 07:32:37","updated_by":"1"},{"id":"5982d195616dac5789b9fa34","name":"image","slug":"image","description":null,"feature_image":null,"parent_id":null,"visibility":"public","meta_title":null,"meta_description":null,"created_at":"2017-08-03 07:32:37","created_by":"1","updated_at":"2017-08-03 07:32:37","updated_by":"1"}],"posts_tags":[{"id":"5980662d8b6b9f5294dd27c0","post_id":"5980610f8b6b9f5294dd27be","tag_id":"5980662d8b6b9f5294dd27bf","sort_order":0},{"id":"5980662d8b6b9f5294dd27c2","post_id":"5980610f8b6b9f5294dd27be","tag_id":"5980662d8b6b9f5294dd27c1","sort_order":1},{"id":"59813829d62a9854962c9409","post_id":"59806b3a43d7fc53ddfd277a","tag_id":"59813829d62a9854962c9408","sort_order":0},{"id":"59813b03d62a9854962c940d","post_id":"59813996d62a9854962c940b","tag_id":"59813b03d62a9854962c940c","sort_order":0},{"id":"59813b03d62a9854962c940f","post_id":"59813996d62a9854962c940b","tag_id":"59813b03d62a9854962c940e","sort_order":1},{"id":"5982bcb9616dac5789b9fa22","post_id":"5982b8d9616dac5789b9fa21","tag_id":"59813829d62a9854962c9408","sort_order":0},{"id":"5982c265616dac5789b9fa27","post_id":"5982c1c1616dac5789b9fa25","tag_id":"5982c265616dac5789b9fa26","sort_order":0},{"id":"5982c265616dac5789b9fa29","post_id":"5982c1c1616dac5789b9fa25","tag_id":"5982c265616dac5789b9fa28","sort_order":1},{"id":"5982c265616dac5789b9fa2b","post_id":"5982c1c1616dac5789b9fa25","tag_id":"5982c265616dac5789b9fa2a","sort_order":2},{"id":"5982cd1a616dac5789b9fa2d","post_id":"5982cb8b616dac5789b9fa2c","tag_id":"5982c265616dac5789b9fa28","sort_order":0},{"id":"5982cd1a616dac5789b9fa2f","post_id":"5982cb8b616dac5789b9fa2c","tag_id":"5982cd1a616dac5789b9fa2e","sort_order":1},{"id":"5982d195616dac5789b9fa31","post_id":"5982cded616dac5789b9fa30","tag_id":"5982c265616dac5789b9fa28","sort_order":0},{"id":"5982d195616dac5789b9fa33","post_id":"5982cded616dac5789b9fa30","tag_id":"5982d195616dac5789b9fa32","sort_order":1},{"id":"5982d195616dac5789b9fa35","post_id":"5982cded616dac5789b9fa30","tag_id":"5982d195616dac5789b9fa34","sort_order":2}],"apps":[],"app_settings":[],"app_fields":[],"subscribers":[],"invites":[{"id":"598299ef616dac5789b9fa15","role_id":"59805314cc08c852733d222e","status":"sent","token":"MTUwMjMzNjExMTI1M3x4eXFqYXlraW5nQGdtYWlsLmNvbXxBdjIvV3BxWUt4MDVVUWdjclNsdGpBOVl0YnFkYStDaTRWaVhKUEQ1M20wPQ==","email":"xyqjayking@gmail.com","expires":1502336111253,"created_at":"2017-08-03 03:35:11","created_by":"1","updated_at":"2017-08-03 03:35:13","updated_by":"1"},{"id":"59829a10616dac5789b9fa18","role_id":"59805314cc08c852733d222e","status":"sent","token":"MTUwMjMzNjE0NDA0MXxsaXV5b3VzaGVuMTk5MEAxNjMuY29tfHRVU0lJdzZBaVoySEh1d0VxZnFRQ04vL3FKWXhkNjVjcjZKTk80eWNJWUk9","email":"liuyoushen1990@163.com","expires":1502336144041,"created_at":"2017-08-03 03:35:44","created_by":"1","updated_at":"2017-08-03 03:35:47","updated_by":"1"}],"brute":[{"key":"s6MfyedHwKGxOSjxTXyIpicYgy4xmSV2tmdaHpo22+Y=","firstRequest":1502257662783,"lastRequest":1502257662783,"lifetime":1502261262810,"count":1}]}}